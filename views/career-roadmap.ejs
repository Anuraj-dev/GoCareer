<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= careerTitle %> - Career Roadmap - GoCareer</title>
    <!-- Favicon -->
    <link rel="icon" href="/images/favicon.png" type="image/png" />
    <link rel="shortcut icon" href="/images/favicon.png" type="image/png" />
    <link
        href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=DM+Sans:wght@400;500;700&family=Space+Mono:wght@400;700&family=Outfit:wght@300;600&family=Plus+Jakarta+Sans:wght@400;500;600;700&family=Space+Grotesk:wght@400;500;600;700&display=swap"
        rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
    <style>
        body {
            font-family: "Space Grotesk", sans-serif;
            background: url('/images/background.jpeg') center/cover no-repeat fixed;
            min-height: 100vh;
            position: relative;
            padding-top: 70px;
        }

        /* Add an overlay to ensure text readability */
        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.85);
            z-index: 0;
        }

        /* Ensure content appears above the overlay */
        .navbar, .container {
            position: relative;
            z-index: 1;
        }

        /* Container margin adjustment */
        .container {
            padding-top: 0.5rem;
        }

        /* Navbar Styles */
        .navbar {
            background: rgba(255, 255, 255, 0.75);
            backdrop-filter: blur(8px);
            font-family: "Space Grotesk", sans-serif;
            position: fixed;
            width: 100%;
            top: 0;
            left: 0;
            z-index: 1000;
            padding: 0.6rem 0;
            margin-bottom: 0;
            box-shadow: 0 2px 8px rgba(24, 53, 80, 0.05);
            transition: all 0.3s ease;
            border-bottom: 1px solid rgba(104, 176, 227, 0.1);
        }

        .navbar.scrolled {
            padding: 0;
            background: rgba(255, 255, 255, 0.9);
            box-shadow: 0 1px 6px rgba(24, 53, 80, 0.08);
        }

        /* Loading Animation Styles */
        .loading-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 400px;
            text-align: center;
            padding: 2rem;
        }

        .loading-spinner {
            display: inline-block;
            position: relative;
            width: 80px;
            height: 80px;
        }

        .loading-spinner div {
            position: absolute;
            border: 4px solid #183550;
            opacity: 1;
            border-radius: 50%;
            animation: loading-spinner 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;
        }

        .loading-spinner div:nth-child(2) {
            animation-delay: -0.5s;
        }

        @keyframes loading-spinner {
            0% {
                top: 36px;
                left: 36px;
                width: 0;
                height: 0;
                opacity: 0;
            }
            4.9% {
                top: 36px;
                left: 36px;
                width: 0;
                height: 0;
                opacity: 0;
            }
            5% {
                top: 36px;
                left: 36px;
                width: 0;
                height: 0;
                opacity: 1;
            }
            100% {
                top: 0px;
                left: 0px;
                width: 72px;
                height: 72px;
                opacity: 0;
            }
        }

        .loading-text {
            margin-top: 2rem;
            font-size: 1.2rem;
            color: #183550;
            animation: pulse 1.5s infinite;
        }

        @keyframes pulse {
            0% { opacity: 0.6; }
            50% { opacity: 1; }
            100% { opacity: 0.6; }
        }

        /* Roadmap Styles */
        .roadmap-container {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 16px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 6px 20px rgba(24, 53, 80, 0.08);
            display: none; /* Hide initially, show when data loads */
        }

        .roadmap-header {
            margin-bottom: 2rem;
            border-bottom: 1px solid rgba(24, 53, 80, 0.1);
            padding-bottom: 1rem;
        }

        .roadmap-header h1 {
            font-family: 'Outfit', sans-serif;
            font-size: 2.2rem;
            color: #183550;
            margin-bottom: 1rem;
        }

        .roadmap-header p {
            font-family: 'Plus Jakarta Sans', sans-serif;
            color: rgba(24, 53, 80, 0.8);
            font-size: 1.1rem;
            line-height: 1.6;
        }

        .timeline-container {
            position: relative;
            margin: 3rem 0;
        }

        .timeline-container::before {
            content: '';
            position: absolute;
            width: 4px;
            background-color: rgba(104, 176, 227, 0.3);
            top: 0;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            z-index: 0;
        }

        .timeline-item {
            padding: 1.5rem;
            position: relative;
            background: white;
            border-radius: 12px;
            width: calc(50% - 40px);
            margin-bottom: 3rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
            z-index: 1;
        }

        .timeline-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
        }

        .timeline-item:nth-child(odd) {
            left: 0;
        }

        .timeline-item:nth-child(even) {
            left: calc(50% + 40px);
        }

        .timeline-item::after {
            content: '';
            position: absolute;
            width: 20px;
            height: 20px;
            background-color: #68b0e3;
            border: 4px solid #183550;
            border-radius: 50%;
            top: 30px;
            z-index: 1;
        }

        .timeline-item:nth-child(odd)::after {
            right: -50px;
        }

        .timeline-item:nth-child(even)::after {
            left: -50px;
        }

        .timeline-item h3 {
            font-family: 'Space Grotesk', sans-serif;
            color: #183550;
            margin-bottom: 0.5rem;
        }

        .timeline-duration {
            display: inline-block;
            background: rgba(104, 176, 227, 0.15);
            padding: 0.3rem 1rem;
            border-radius: 20px;
            color: #183550;
            font-size: 0.9rem;
            margin-bottom: 1rem;
        }

        .timeline-item p {
            margin-bottom: 1.2rem;
            color: rgba(24, 53, 80, 0.8);
        }

        .skills-container {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin-bottom: 1rem;
        }

        .skill-tag {
            background: rgba(104, 176, 227, 0.1);
            color: #183550;
            padding: 0.3rem 0.8rem;
            border-radius: 20px;
            font-size: 0.9rem;
        }

        .section-title {
            font-family: 'Space Grotesk', sans-serif;
            color: #183550;
            font-size: 1.5rem;
            margin: 3rem 0 1.5rem;
            border-bottom: 3px solid #68b0e3;
            padding-bottom: 0.5rem;
            display: inline-block;
        }

        .resource-card {
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            padding: 1.2rem;
            margin-bottom: 1rem;
            transition: all 0.3s ease;
        }

        .resource-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .resource-type {
            display: inline-block;
            background: rgba(24, 53, 80, 0.1);
            padding: 0.2rem 0.6rem;
            border-radius: 5px;
            font-size: 0.8rem;
            margin-bottom: 0.5rem;
        }

        .resource-name {
            font-weight: 600;
            font-size: 1.1rem;
            margin-bottom: 0.5rem;
            color: #183550;
        }

        .nav-buttons {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 2rem;
            padding: 1rem 0;
        }

        .error-container {
            display: none;
            text-align: center;
            padding: 3rem;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 16px;
            box-shadow: 0 6px 20px rgba(24, 53, 80, 0.08);
        }

        .error-icon {
            font-size: 4rem;
            color: #ff6b6b;
            margin-bottom: 1rem;
        }

        /* Responsive adjustments for mobile */
        @media (max-width: 768px) {
            .timeline-container::before {
                left: 31px;
            }
            .timeline-item {
                width: calc(100% - 60px);
                left: 60px !important;
            }
            .timeline-item::after {
                left: -40px !important;
            }
        }
    </style>
  </head>
  <body>
    <%- include('partials/header', {
      title: careerTitle + ' - Career Roadmap'
    }) %>

    <%- include('partials/navigation', {
      path: '/insights'
    }) %>

    <div class="container">
      <!-- Loading Animation -->
      <div class="loading-container" id="loadingContainer">
        <div class="loading-spinner">
          <div></div>
          <div></div>
        </div>
        <div class="loading-text">
          <p>Generating your personalized roadmap for <strong><%= careerTitle %></strong>...</p>
          <p class="text-muted mt-3">This may take a moment as we build a comprehensive plan</p>
        </div>
      </div>

      <!-- Error Container -->
      <div class="error-container" id="errorContainer">
        <div class="error-icon">
          <i class="bi bi-exclamation-triangle"></i>
        </div>
        <h2>Oops! Something went wrong</h2>
        <p class="mb-4">We couldn't generate the roadmap for this career path.</p>
        <button onclick="retryRoadmap()" class="btn btn-primary me-2">Try Again</button>
        <button onclick="window.location.href='/career-paths'" class="btn btn-outline-secondary">Back to Career Paths</button>
      </div>

      <!-- Roadmap Content -->
      <div class="roadmap-container" id="roadmapContainer">
        <div class="roadmap-header">
          <h1 id="roadmapTitle">Career Roadmap</h1>
          <p id="roadmapSummary">Loading summary...</p>
        </div>

        <div class="timeline-container" id="timelineContainer">
          <!-- Timeline items will be inserted here by JavaScript -->
        </div>

        <h2 class="section-title">Learning Resources</h2>
        <div class="row" id="learningResourcesContainer">
          <!-- Learning resources will be inserted here by JavaScript -->
        </div>

        <h2 class="section-title">Industry Outlook</h2>
        <div class="industry-outlook" id="industryOutlookContainer">
          <!-- Industry outlook will be inserted here by JavaScript -->
        </div>

        <div class="card mt-4 mb-4">
          <div class="card-body">
            <h3 class="card-title">Local Relevance</h3>
            <p class="card-text" id="localRelevance">Loading local relevance information...</p>
          </div>
        </div>

        <div class="nav-buttons">
          <button onclick="window.location.href='/career-paths'" class="btn" style="background: transparent; color: #183550; border: 2px solid #183550; border-radius: 8px;">← Back to Career Paths</button>
          <button onclick="window.location.href='/assessment'" class="btn" style="background: #183550; color: white; border-radius: 8px;">Take Assessment Again</button>
        </div>
      </div>
    </div>

    <%- include('partials/footer', {
      useVanta: false,
      transparent: true
    }) %>

    <script>
      // Store career title and details for API request
      const careerTitle = "<%= careerTitle %>";
      const careerDetails = <%- JSON.stringify(careerDetails || {}) %>;

      // Function to fetch roadmap data
      async function fetchRoadmap() {
        try {
          const response = await fetch('/api/career-roadmap', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              careerTitle: careerTitle,
              careerDetails: careerDetails
            }),
          });

          if (!response.ok) {
            const statusCode = response.status;
            if (statusCode === 404) {
              // Handle 404 error specifically
              document.getElementById('errorContainer').querySelector('h2').textContent = 'Career Not Found';
              document.getElementById('errorContainer').querySelector('p').textContent = 
                `We couldn't find the roadmap for "${careerTitle}". Please try another career path.`;
            }
            throw new Error(`Failed to fetch roadmap: ${response.status} ${response.statusText}`);
          }

          const data = await response.json();
          
          if (data.success && data.roadmap) {
            renderRoadmap(data.roadmap);
          } else {
            throw new Error(data.error || 'Failed to generate roadmap');
          }
        } catch (error) {
          console.error('Error fetching roadmap:', error);
          showError();
        }
      }

      // Function to render roadmap data
      function renderRoadmap(roadmap) {
        document.getElementById('loadingContainer').style.display = 'none';
        document.getElementById('roadmapContainer').style.display = 'block';
        
        // Set title and summary
        document.getElementById('roadmapTitle').textContent = roadmap.title;
        document.getElementById('roadmapSummary').textContent = roadmap.summary;
        
        // Render timeline
        const timelineContainer = document.getElementById('timelineContainer');
        timelineContainer.innerHTML = '';
        
        if (roadmap.timeline && roadmap.timeline.length > 0) {
          roadmap.timeline.forEach(stage => {
            const timelineItem = document.createElement('div');
            timelineItem.className = 'timeline-item';
            
            let skillsHtml = '';
            if (stage.key_skills && stage.key_skills.length > 0) {
              skillsHtml = `
                <h4>Key Skills</h4>
                <div class="skills-container">
                  ${stage.key_skills.map(skill => `<span class="skill-tag">${skill}</span>`).join('')}
                </div>
              `;
            }
            
            let rolesHtml = '';
            if (stage.typical_roles && stage.typical_roles.length > 0) {
              rolesHtml = `
                <h4>Typical Roles</h4>
                <ul>
                  ${stage.typical_roles.map(role => `<li>${role}</li>`).join('')}
                </ul>
              `;
            }
            
            timelineItem.innerHTML = `
              <h3>${stage.stage}</h3>
              <div class="timeline-duration">${stage.duration}</div>
              <p>${stage.description}</p>
              ${skillsHtml}
              <h4>Education</h4>
              <p>${stage.education}</p>
              ${rolesHtml}
              <h4>Salary Range</h4>
              <p>${stage.salary_range}</p>
              <h4>Growth Tips</h4>
              <p>${stage.growth_tips}</p>
            `;
            
            timelineContainer.appendChild(timelineItem);
          });
        }
        
        // Render learning resources
        const resourcesContainer = document.getElementById('learningResourcesContainer');
        resourcesContainer.innerHTML = '';
        
        if (roadmap.learning_resources && roadmap.learning_resources.length > 0) {
          roadmap.learning_resources.forEach(resource => {
            const resourceCard = document.createElement('div');
            resourceCard.className = 'col-md-6 col-lg-4 mb-3';
            
            resourceCard.innerHTML = `
              <div class="resource-card">
                <div class="resource-type">${resource.type} - ${resource.level}</div>
                <div class="resource-name">${resource.name}</div>
                <div class="resource-provider text-muted mb-2">${resource.provider}</div>
                <p>${resource.description}</p>
              </div>
            `;
            
            resourcesContainer.appendChild(resourceCard);
          });
        } else {
          resourcesContainer.innerHTML = '<p>No specific learning resources available.</p>';
        }
        
        // Render industry outlook
        const outlookContainer = document.getElementById('industryOutlookContainer');
        
        if (roadmap.industry_outlook) {
          const outlook = roadmap.industry_outlook;
          
          let trendsHtml = '';
          if (outlook.trends && outlook.trends.length > 0) {
            trendsHtml = `
              <h4>Trends</h4>
              <ul>
                ${outlook.trends.map(trend => `<li>${trend}</li>`).join('')}
              </ul>
            `;
          }
          
          let challengesHtml = '';
          if (outlook.challenges && outlook.challenges.length > 0) {
            challengesHtml = `
              <h4>Challenges</h4>
              <ul>
                ${outlook.challenges.map(challenge => `<li>${challenge}</li>`).join('')}
              </ul>
            `;
          }
          
          let opportunitiesHtml = '';
          if (outlook.opportunities && outlook.opportunities.length > 0) {
            opportunitiesHtml = `
              <h4>Opportunities</h4>
              <ul>
                ${outlook.opportunities.map(opportunity => `<li>${opportunity}</li>`).join('')}
              </ul>
            `;
          }
          
          outlookContainer.innerHTML = `
            <div class="card mb-4">
              <div class="card-body">
                <h3 class="card-title">Growth Rate</h3>
                <p class="card-text">${outlook.growth_rate}</p>
              </div>
            </div>
            <div class="row">
              <div class="col-md-4">
                ${trendsHtml}
              </div>
              <div class="col-md-4">
                ${challengesHtml}
              </div>
              <div class="col-md-4">
                ${opportunitiesHtml}
              </div>
            </div>
          `;
        } else {
          outlookContainer.innerHTML = '<p>No industry outlook information available.</p>';
        }
        
        // Set local relevance
        document.getElementById('localRelevance').textContent = roadmap.local_relevance || 'No specific local relevance information available.';
      }

      // Function to show error
      function showError() {
        document.getElementById('loadingContainer').style.display = 'none';
        document.getElementById('errorContainer').style.display = 'block';
      }

      // Function to retry roadmap generation
      function retryRoadmap() {
        document.getElementById('errorContainer').style.display = 'none';
        document.getElementById('loadingContainer').style.display = 'flex';
        fetchRoadmap();
      }

      // On page load, fetch the roadmap
      document.addEventListener('DOMContentLoaded', function() {
        fetchRoadmap();
        
        // Navbar scroll effect
        const navbar = document.querySelector('.navbar');
        
        window.addEventListener('scroll', function() {
          if (window.scrollY > 10) {
            navbar.classList.add('scrolled');
          } else {
            navbar.classList.remove('scrolled');
          }
        });
        
        // Check initial scroll position
        if (window.scrollY > 10) {
          navbar.classList.add('scrolled');
        }
      });
    </script>
  </body>
</html> 