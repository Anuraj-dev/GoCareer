<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Career Options - GoCareer</title>
    <link
        href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=DM+Sans:wght@400;500;700&family=Space+Mono:wght@400;700&family=Outfit:wght@300;600&family=Plus+Jakarta+Sans:wght@400;500;600;700&family=Space+Grotesk:wght@400;500;600;700&display=swap"
        rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
    <style>
        body {
            font-family: "Space Grotesk", sans-serif;
            background: url('/images/background.jpeg') center/cover no-repeat fixed;
            min-height: 100vh;
            position: relative;
        }

        /* Add an overlay to ensure text readability */
        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.85);
            z-index: 0;
        }

        /* Ensure content appears above the overlay */
        .navbar, .container {
            position: relative;
            z-index: 1;
        }

        /* Container margin adjustment */
        .container {
            padding-top: 0.5rem;
        }

        /* Navbar Styles */
        .navbar {
            background: transparent;
            font-family: "Space Grotesk", sans-serif;
            position: relative;
            z-index: 1;
            padding: 0.3rem 0;
            margin-bottom: 0;
        }

        .navbar-nav.mx-auto {
            gap: 1rem;
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
        }

        .navbar-brand {
            font-family: "Space Grotesk", monospace;
            font-weight: 700;
            font-size: 2.4rem;
            letter-spacing: -1px;
            color: #183550;
        }

        /* Search Styles */
        .search-input {
            min-width: 200px;
            padding: 0.6rem 1rem;
            background: rgba(255, 255, 255, 0.15);
            border: 1px solid rgba(24, 53, 80, 0.1);
            color: #000;
            backdrop-filter: blur(10px);
            transition: all 0.3s ease;
        }

        .search-input::placeholder {
            color: rgba(0, 0, 0, 0.5);
        }

        .search-input:focus {
            background: rgba(255, 255, 255, 0.25);
            border-color: rgba(24, 53, 80, 0.2);
            box-shadow: 0 0 0 2px rgba(24, 53, 80, 0.1);
        }

        .search-btn {
            backdrop-filter: blur(5px);
            border: 1px solid rgba(24, 53, 80, 0.2);
            color: #183550;
        }

        .search-btn:hover {
            background: rgba(24, 53, 80, 0.05);
            border-color: #183550;
        }

        .nav-link {
            font-family: "Plus Jakarta Sans", sans-serif;
            font-weight: 500;
            letter-spacing: -0.2px;
            position: relative;
            padding: 0.5rem 1.8rem;
            font-size: 1.1rem;
            transition: all 0.3s ease;
            opacity: 0.75;
        }

        .nav-link:hover {
            opacity: 1;
        }

        .nav-link::after {
            content: '';
            position: absolute;
            width: 0;
            height: 2px;
            bottom: 0;
            left: 50%;
            background: #68b0e3;
            transition: all 0.3s ease;
            transform: translateX(-50%);
        }

        .nav-link:hover::after {
            width: 70%;
        }

        .source-info {
            background: rgba(104, 176, 227, 0.15);
            border-left: 4px solid #68b0e3;
            padding: 0.5rem 1rem;
            margin: 0.5rem 0 1rem;
            border-radius: 0 8px 8px 0;
            box-shadow: 0 2px 4px rgba(24, 53, 80, 0.1);
            font-size: 0.9rem;
            width: fit-content;
            margin-left: auto;
            color: #183550;
            font-weight: 500;
        }

        .source-info span::before {
            content: "AI Powered: ";
            font-weight: 600;
            color: #68b0e3;
        }

        .user-summary {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 12px;
            padding: 1rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 4px 6px rgba(24, 53, 80, 0.1);
            transition: all 0.3s ease;
            border: 1px solid rgba(24, 53, 80, 0.1);
        }

        .user-summary-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            cursor: pointer;
        }

        .user-summary-content {
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.3s ease;
        }

        .user-summary.expanded .user-summary-content {
            max-height: 500px;
            margin-top: 1rem;
        }

        .toggle-icon {
            transition: transform 0.3s ease;
        }

        .user-summary.expanded .toggle-icon {
            transform: rotate(180deg);
        }

        .user-summary h2 {
            font-family: 'Space Grotesk', sans-serif;
            color: #183550;
            margin-bottom: 1rem;
        }

        .user-detail {
            margin-bottom: 0.5rem;
            color: rgba(24, 53, 80, 0.8);
        }

        .user-detail strong {
            color: #183550;
        }

        .career-card {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 12px;
            border: 1px solid rgba(24, 53, 80, 0.1);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            margin-bottom: 2rem;
            transition: all 0.3s ease;
            opacity: 0;
            transform: translateY(20px);
            animation: slideIn 0.5s ease forwards;
        }

        .career-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 15px rgba(24, 53, 80, 0.1);
        }

        .career-card-header {
            background: #183550;
            color: white;
            padding: 1.5rem;
            border-radius: 12px 12px 0 0;
        }

        .career-card-header h2 {
            font-family: 'Space Grotesk', sans-serif;
            font-size: 1.5rem;
            margin: 0;
            color: white;
        }

        .career-card-body {
            padding: 1.5rem;
        }

        .career-stats {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .stat-item {
            text-align: center;
            padding: 1rem;
            background: rgba(104, 176, 227, 0.1);
            border-radius: 8px;
        }

        .stat-value {
            font-family: 'Space Mono', monospace;
            font-size: 1.25rem;
            font-weight: 700;
            color: #183550;
        }

        .stat-label {
            font-size: 0.85rem;
            color: rgba(24, 53, 80, 0.7);
            margin-top: 0.25rem;
        }

        .career-details h3 {
            font-family: 'Plus Jakarta Sans', sans-serif;
            font-size: 1.1rem;
            color: #183550;
            margin-bottom: 0.75rem;
        }

        .career-details ul {
            list-style: none;
            padding: 0;
            margin: 0 0 1.5rem;
        }

        .career-details li {
            padding: 0.5rem 0;
            padding-left: 1.5rem;
            position: relative;
            color: rgba(24, 53, 80, 0.8);
        }

        .career-details li::before {
            content: "•";
            color: #68b0e3;
            font-weight: bold;
            position: absolute;
            left: 0;
        }

        .skill-tag {
            background: rgba(104, 176, 227, 0.1);
            color: #183550;
            padding: 0.4rem 1rem;
            border-radius: 20px;
            display: inline-block;
            margin: 0 0.5rem 0.5rem 0;
            font-size: 0.9rem;
        }

        .nav-buttons {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 2rem;
            padding: 1rem 0;
        }

        .btn {
            font-family: 'Space Grotesk', sans-serif;
            padding: 0.8rem 2rem;
            background: #183550;
            color: white;
            border: none;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .btn:hover {
            background: #68b0e3;
            transform: translateY(-2px);
        }

        @keyframes slideIn {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .career-card:nth-child(1) { animation-delay: 0.1s; }
        .career-card:nth-child(2) { animation-delay: 0.2s; }
        .career-card:nth-child(3) { animation-delay: 0.3s; }
        .career-card:nth-child(4) { animation-delay: 0.4s; }
        .career-card:nth-child(5) { animation-delay: 0.5s; }

        /* Loading styles */
        .loading {
            text-align: center;
            padding: 2rem;
            color: #183550;
            position: relative;
            z-index: 1;
        }

        .loading-spinner {
            width: 50px;
            height: 50px;
            border: 5px solid rgba(24, 53, 80, 0.1);
            border-top-color: #183550;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto 1rem;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        .results-header {
            text-align: center;
            margin: 1.2rem 0 2rem;
        }

        .results-header h1 {
            font-family: 'Outfit', sans-serif;
            font-size: 2.5rem;
            color: #183550;
            margin-bottom: 0.5rem;
        }

        .results-header p {
            font-family: 'Plus Jakarta Sans', sans-serif;
            color: rgba(24, 53, 80, 0.8);
            font-size: 1.1rem;
            max-width: 600px;
            margin: 0 auto;
        }
    </style>
  </head>
  <body>
    <%- include('partials/header', {
      title: 'Career Options'
    }) %>

    <%- include('partials/navigation', {
      path: '/career-paths'
    }) %>

    <div class="container">
      <div class="results-header">
        <h1>Your Career Recommendations</h1>
        <p>Based on your unique profile and interests, we've curated these career paths just for you.</p>
        <div class="source-info">
          <span><%= recommendationSource %></span>
        </div>
      </div>

      <div class="user-summary">
        <div class="user-summary-header">
          <h2 style="margin-bottom: 0;">Your Profile</h2>
          <i class="bi bi-chevron-down toggle-icon"></i>
        </div>
        <div class="user-summary-content">
          <div class="user-detail">
            <strong>Qualification:</strong>
            <span><%= userData.qualification %></span>
          </div>
          <div class="user-detail">
            <strong>Higher Studies:</strong>
            <span><%= userData.higherStudies %></span>
          </div>
          <% if (userData.stream) { %>
          <div class="user-detail">
            <strong>Stream:</strong> <span><%= userData.stream %></span>
          </div>
          <% } %> <% if (userData.subjects) { %>
          <div class="user-detail">
            <strong>Subjects:</strong> <span><%= userData.subjects %></span>
          </div>
          <% } %>
          <div class="user-detail">
            <strong>Age:</strong> <span><%= userData.age %></span>
          </div>
          <div class="user-detail">
            <strong>Location:</strong> <span><%= userData.location %></span>
          </div>
          <% if (userData.incomeLevel) { %>
          <div class="user-detail">
            <strong>Income Level:</strong>
            <span><%= userData.incomeLevel %></span>
          </div>
          <% } %>
        </div>
      </div>

      <% if (careerPaths && careerPaths.length > 0) { %>
      <div id="careerResults">
        <% careerPaths.forEach((career, index) => { %>
        <div class="career-card">
          <div class="career-card-header">
            <h2><%= career.title %></h2>
          </div>
          <div class="career-card-body">
            <div class="career-stats">
              <div class="stat-item">
                <div class="stat-value"><%= career.salary_range %></div>
                <div class="stat-label">Salary Range</div>
              </div>
              <div class="stat-item">
                <div class="stat-value"><%= career.path_type === "immediate" ? "Immediate" : "4-5 years" %></div>
                <div class="stat-label">Duration</div>
              </div>
              <div class="stat-item">
                <div class="stat-value">High</div>
                <div class="stat-label">Growth</div>
              </div>
            </div>

            <div class="career-details">
              <h3>About This Career</h3>
              <p><%= career.description %></p>

              <h3>Required Skills</h3>
              <div class="skills-container">
                <% career.skills.forEach(skill => { %>
                <span class="skill-tag"><%= skill %></span>
                <% }); %>
              </div>

              <h3>Requirements</h3>
              <ul>
                <% if (Array.isArray(career.requirements)) { %>
                  <% career.requirements.forEach(req => { %>
                    <li><%= req %></li>
                  <% }); %>
                <% } else { %>
                  <li><%= career.requirements %></li>
                <% } %>
              </ul>

              <% if (career.local_relevance) { %>
              <h3>Local Relevance</h3>
              <p><%= career.local_relevance %></p>
              <% } %>
            </div>
          </div>
          <% if (career.match_percentage) { %>
          <div class="career-card-footer">
            <div class="career-match">
              <span class="match-label">Match Score:</span>
              <span class="match-value"><%= career.match_percentage %>%</span>
            </div>
            <button class="explore-btn">Explore More</button>
          </div>
          <% } %>
        </div>
        <% }); %>
      </div>
      <% } else { %>
      <div class="loading">
        <div class="loading-spinner"></div>
        <p>Loading your personalized career recommendations...</p>
      </div>
      <div class="career-card" style="display: none;">
        <div class="career-card-header">
          <h2>No Career Paths Found</h2>
        </div>
        <div class="career-card-body">
          <p>We couldn't find any career recommendations matching your profile. Please try again with different information.</p>
        </div>
      </div>
      <% } %>

      <div class="nav-buttons">
        <a href="/assessment" class="nav-link">← Take Test Again</a>
        <a href="/" class="btn">Back to Home</a>
      </div>
    </div>

    <%- include('partials/footer', {
      useVanta: false,
      transparent: true
    }) %>

    <link rel="stylesheet" href="/css/career-paths.css">

    <script>
      document.addEventListener('DOMContentLoaded', function() {
        // Hide loading spinner if we have career paths
        const careerResults = document.getElementById('careerResults');
        const loadingElement = document.querySelector('.loading');
        if (careerResults) {
          if (loadingElement) {
            loadingElement.style.display = 'none';
          }
        } else if (loadingElement) {
          // Show no results card after loading animation
          setTimeout(() => {
            loadingElement.style.display = 'none';
            const noResultsCard = document.querySelector('.career-card');
            if (noResultsCard) {
              noResultsCard.style.display = 'block';
            }
          }, 1500);
        }

        // Profile accordion functionality
        const userSummary = document.querySelector('.user-summary');
        const userSummaryHeader = document.querySelector('.user-summary-header');
        
        userSummaryHeader.addEventListener('click', function() {
          userSummary.classList.toggle('expanded');
        });
      });
    </script>
  </body>
</html>
